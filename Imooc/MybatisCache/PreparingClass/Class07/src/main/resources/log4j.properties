#只输出到了控制台（stdOut）未输出到文件（fileOut）
log4j.rootLogger=DEBUG,stdOut
#######################################  stdOut  ##########################################
#配置日志输出
#org.apache.log4j.ConsoleAppender 输出到控制台
#org.apache.log4j.FileAppender 输出到文件
#org.apache.log4j.DailyRollingFileAppender 输出到文件（每天一个文件）
#org.apache.log4j.RollingFileAppender 输出到文件（文件大小达到指定尺寸后产生一个新的文件）
#org.apache.log4j.WriterAppender 输出流
log4j.appender.stdOut=org.apache.log4j.ConsoleAppender
#配置日志输出参数
log4j.appender.stdOut.Target=System.Out
#配置日志布局
#org.apache.log4j.HTMLLayout 以HTML表格形式布局
#org.apache.log4j.PatternLayout 自定义布局
#org.apache.log4j.SimpleLayout 包含日志信息的界别和信息字符串
#org.apache.log4j.TTCCLayout 包含日志产生的时间、线程、类别等等
log4j.appender.stdOut.layout=org.apache.log4j.PatternLayout
#配置自定义输出格式
#%m 输出文本信息
#%p 输出优先级，即OFF,FATAL,ERROR,WARN,INFO,DEBUG,ALL
#%r 输出自应用启动搞输出该log信息耗费的毫秒数
#%c 输出所属的类，通常是类全名
#%t 输出产生该日志时间的线程名
#%n 输出一个回车换行
#%d 输出日志产生时间
#%l 输出日志时间发生的位置，包含类名、线程及代码中的行数
log4j.appender.stdOut.layout.ConversionPattern= %d{yyyy-MM-dd HH:mm:ss.SSS} [%-5p] %l --> %m %n